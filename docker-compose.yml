services:
    app:
        user: root
        build:
            context: .
            dockerfile: Dockerfile
        container_name: news-aggregator-app
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - news-network
        depends_on:
            db:
                condition: service_healthy
        environment:
            DB_CONNECTION: mysql
            DB_HOST: db
            DB_PORT: 3306
            DB_DATABASE: news_aggregator_api
            DB_USERNAME: root
            DB_PASSWORD: ""

    nginx:
        image: nginx:alpine
        container_name: news-aggregator-nginx
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - news-network
        depends_on:
            - app

    db:
        image: mysql:8.0
        container_name: news-aggregator-db
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: news_aggregator_api
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
            MYSQL_ROOT_PASSWORD: ""
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - news-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 3s
            retries: 5
        command: --default-authentication-plugin=mysql_native_password

    scheduler:
        build:
            context: .
            dockerfile: Dockerfile.scheduler
        volumes:
            - .:/var/www
        networks:
            - news-network
        depends_on:
            - app
            - db
        command: bash -c "rm -f /var/run/crond.pid && echo '* * * * * cd /var/www && php artisan schedule:run >> /dev/null 2>&1' | crontab && cron -f"

networks:
    news-network:
        driver: bridge

volumes:
    dbdata:
